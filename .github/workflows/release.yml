name: Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B install -DskipTests
    - name: Create Tag
      run: |
        echo "RELEASE_TAG=`cat ./src/main/resources/.version`" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: ${{ env.RELEASE_TAG }}
        draft: false
        prerelease: false
    - name: Upload Gzip Asset
      id: upload-gzip-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./target/tair-cli-release.tar.gz
        asset_name: tair-cli-release.tar.gz
        asset_content_type: application/gzip
    - name: Upload Zip Asset
      id: upload-zip-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./target/tair-cli-release.zip
        asset_name: tair-cli-release.zip
        asset_content_type: application/zip
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and Push latest
      id: latest
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: false
        tags: ${{ secrets.DOCKER_USER }}/${{ secrets.REPO }}:latest
    - name: Build and Push ${{ env.RELEASE_TAG }}
      id: tag
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: false
        tags: ${{ secrets.DOCKER_USER }}/${{ secrets.REPO }}:${{ env.RELEASE_TAG }}
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
